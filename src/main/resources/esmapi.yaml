openapi: "3.0.0"
info:
  version: 1.0.0
  title: ESM User
  license:
    name: ESM
servers:
  - url: http://localhost:8080
paths:
  /users/upload:
    post:
      summary: Upload User CSV
      operationId: upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success but no data updated
        '201':
          description: Data created or uploaded          
        '400':
          description: Bad input - parsing error, duplicate row, invalid salary etc.
        default:
          description: unexpected error
  /users:
    get:
      summary: List users 
      operationId: listUsers
      tags:
        - UserDetail
      parameters:
        - in: query
          name: minSalary
          schema:
            type: number
            format: double
            default: 0
        - in: query
          name: maxSalary
          schema:
            type: number
            format: double
            default: 4000
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 0
        - in: query
          name: sortName
          schema:
            type: string
            enum:
            - id
            - login
            - name
            - salary
            - startDate
            default: "id"
        - in: query
          name: sortDir
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
        - in: query
          name: filters
          schema:
            type: string
      responses:
        '200':
          description: An array of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserResponse"
        default:
          description: unexpected error
    post:
      summary: Create an user
      operationId: createUser
      tags:
        - UserDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetail"
      responses:
        '201':
          description: New employee record created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '400':
          description: Bad input - see error cases below
        default:
          description: unexpected error
    put:
      summary: Update an user
      operationId: updateUser
      tags:
        - UserDetail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetail"
      responses:
        '200':
          description: Successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        '400':
          description: Bad input - no such employee, login not unique etc.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        default:
          description: unexpected error
  /users/{id}:
    get:
      summary: Get user detail
      operationId: getUser
      tags:
        - UserDetail
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Success but no data updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetail"
        '400':
          description: Bad input - no such employee
        default:
          description: unexpected error
    delete:
      summary: Delete a specific user
      operationId: deleteUser
      tags:
        - UserDetail
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to delete
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted        
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserResponse"
        '400':
          description: Bad input - No such employee
          content:
              application/json:
                schema:
                  $ref: "#/components/schemas/UserResponse"
        default:
          description: unexpected error
components:
  schemas:
    UserDetail:
      type: object
      required:
        - id
        - login
        - name
        - salary
        - startDate
      properties:
        id:
          type: string
        login:
          type: string
        name:
          type: string
        salary:
          type: number
          format: double
        startDate:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2}$'
          description: Creation date
          example: "2022-05-15"
    UserSearch:
      type: object
      required:
        - minsalary
      properties:
        minsalary:
          type: number
          format: double
    ListUserResponse:
      type: object
      required:
        - results
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/UserDetail"
    UserResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string